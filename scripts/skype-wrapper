#!/bin/bash

PATH=/usr/sbin:/usr/bin:/sbin:/bin
SKYPE_USER=skype

# do we need to use sudo to start docker containers?
( id -Gn | grep -q docker ) || SUDO=sudo

USER_UID=$(id -u)
USER_GID=$(id -g)

XSOCK=/tmp/.X11-unix
XAUTH=/tmp/.docker.xauth

DOWNLOAD_DIR=$(xdg-user-dir DOWNLOAD)
if [ -z "${DOWNLOAD_DIR}" ]; then
    DOWNLOAD_DIR="${HOME}/Downloads"
fi;

list_commands() {
  echo ""
  echo "Launch skype using:"
  echo "  skype [profile-name]                 OR "
  echo "  skype-wrapper skype [profile-name]"
  echo ""
  echo "profile-name allows for multiple skype instances. if no profile-name"
  echo "is specified, a default profile will be created/used"
  echo ""
  exit 1
}

cleanup_stopped_skype_instances(){
  echo "Cleaning up stopped skype instances..."
  CMD=( ${SUDO} docker ps
    --all --quiet
    # remove the exited containers only
    # this allows for multiple containers
    # for different profiles
    --filter=status=exited
    --filter=ancestor=sameersbn/skype
  )
  # echo CMD: ${CMD[@]}
  for c in $( ${CMD[@]} ); do
    ${DOCKER[@]} rm "${c}" >/dev/null
  done
}

prepare_docker_env_parameters() {
  ENV_VARS+=" --env=USER_UID=${USER_UID}"
  ENV_VARS+=" --env=USER_GID=${USER_GID}"
  ENV_VARS+=" --env=DISPLAY"
  ENV_VARS+=" --env=XAUTHORITY=${XAUTH}"
  ENV_VARS+=" --env=TZ=$(date +%Z)"
  if [ -f /etc/timezone ]; then
    ENV_VARS+=" --env=TZ_=$(cat /etc/timezone)"
  else
    ENV_VARS+=" --env=TZ_=$( readlink -e /etc/localtime | sed -E 's|.*/([^/][^/]*/[^/][^/]*)|\1|' )"
  fi
}

prepare_docker_volume_parameters() {
  touch ${XAUTH}
  xauth nlist :0 | sed -e 's/^..../ffff/' | xauth -f ${XAUTH} nmerge -
  
  VOLUMES+=" --volume=${DOWNLOAD_DIR}:/home/${SKYPE_USER}/Downloads"
  VOLUMES+=" --volume=${XSOCK}:${XSOCK}"
  VOLUMES+=" --volume=${XAUTH}:${XAUTH}"
  VOLUMES+=" --volume=/run/user/${USER_UID}/pulse:/run/pulse"

  # assume defualt profile
  PROFILE=default
  
  # use specified profile
  [ -n "$1" ] && PROFILE=$1 && shift
  echo using skype profile $PROFILE

  PROFILE="${HOME}/.skype/${PROFILE}"

  # create the profile directory if it doesn't exist
  [ ! -d "${PROFILE}" ] && mkdir -p ${PROFILE}

  VOLUMES+=" --volume=${PROFILE}:/home/${SKYPE_USER}/.Skype"
}

prepare_docker_device_parameters() {
  # enumerate video devices for webcam support
  VIDEO_DEVICES=
  for device in /dev/video*
  do
    if [ -c $device ]; then
      VIDEO_DEVICES="${VIDEO_DEVICES} --device $device:$device"
    fi
  done
}

prog=$(basename $0)
exec=$(which $prog)

if [[ ${prog} == "skype-wrapper" ]]; then
  case ${1} in
    skype)
      prog=${1}
      shift
      ;;
    *|help)
      list_commands
      exit 1
      ;;
  esac
elif [[ -n ${exec} ]]; then
  # launch host binary if it exists
  exec ${exec} $@
fi

cleanup_stopped_skype_instances
prepare_docker_env_parameters
prepare_docker_volume_parameters
prepare_docker_device_parameters

echo "Starting ${prog}..."
${SUDO} docker run -d \
  ${ENV_VARS} \
  ${VIDEO_DEVICES} \
  ${VOLUMES} \
  sameersbn/skype:latest ${prog} $@ >/dev/null
